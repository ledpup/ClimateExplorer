<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Google tag (gtag.js) -->
    <script async
            src="https://www.googletagmanager.com/gtag/js?id=G-FJJ5YS5FCL"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() {
            dataLayer.push(arguments);
        }
        gtag("js", new Date());

        gtag("config", "G-FJJ5YS5FCL");
    </script>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="ClimateExplorer helps you understand climate change trends. It focuses on climate change's impact on where you live. It is intended to be easy to use and understand.">

    <meta property="og:site_name" content="ClimateExplorer" />
    <meta property="og:type" content="website" />
    <meta property="og:description"
          content="ClimateExplorer helps you understand climate change trends. It focuses on climate change's impact on where you live. It is intended to be easy to use and understand." />
    <meta property="og:image" content="/images/ClimateExplorerLogo.png" />

    <base href="/" />

    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link rel="stylesheet" href="css/app.css" />
    <link rel="stylesheet" href="ClimateExplorer.Web.styles.css" />
    <link rel="stylesheet" href="_content/Blazorise.Bootstrap5/blazorise.bootstrap5.css" />
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v6.2.0/css/all.css" />

    <!--For mapping component -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />

    <link href="_content/Blazorise.LoadingIndicator/blazorise.loadingindicator.css" rel="stylesheet" />
    <link href="_content/Blazorise.Snackbar/blazorise.snackbar.css" rel="stylesheet" />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />
    <meta name="msapplication-TileColor" content="#5bbad5" />
    <meta name="theme-color" content="#ffffff" />

    <HeadOutlet @rendermode="@InteractiveAuto" />
</head>

<body>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-/bQdsTh/da6pkI1MST/rWKFNjaCP5gBSY4sEBT38Q/9RBh9AH40zEOg7Hlq2THRZ"
            crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-trendline@2.0.5"></script>

    <!--For mapping component -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js" integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <script>
        async function getLocation() {
            var getCurrentPositionPromise = new Promise((resolve, reject) => {
                if (!navigator.geolocation) {
                    reject({
                        errorCode: 255,
                        message: "This device does not support geolocation.",
                    });
                } else {
                    navigator.geolocation.getCurrentPosition(resolve, reject, null);
                }
            });

            var result = {};

            await getCurrentPositionPromise
                .then((position) => {
                    result.latitude = position.coords.latitude;
                    result.longitude = position.coords.longitude;
                })
                .catch(
                    // Ignored
                    (error) => {
                        result.errorCode = error.code;
                        result.errorMessage = error.message;
                    }
                );

            return result;
        }

        async function downloadFileFromStream(fileName, contentStreamReference) {
            const arrayBuffer = await contentStreamReference.arrayBuffer();
            const blob = new Blob([arrayBuffer]);
            const url = URL.createObjectURL(blob);

            triggerFileDownload(fileName, url);

            URL.revokeObjectURL(url);
        }

        function triggerFileDownload(fileName, url) {
            const anchorElement = document.createElement("a");
            anchorElement.href = url;
            anchorElement.download = fileName ?? "";
            anchorElement.click();
            anchorElement.remove();
        }

        function toggleMapExpansion() {
            var mapElement = document.getElementById("mapContainer");

            var isMapCurrentlyExpanded =
                mapElement.className == "mapContainer expanded";

            mapElement.className = isMapCurrentlyExpanded
                ? "mapContainer collapsed"
                : "mapContainer expanded";

            // Fake a window resize so that the leaflet map control realises it has resized.
            window.dispatchEvent(new Event("resize"));
        }

        function showOrHideMap(show) {
            var mapElement = document.getElementById("mapContainerContainer");

            mapElement.style.display = show ? "block" : "none";

            // Fake a window resize so that the leaflet map control realises it has resized.
            if (show) {
                window.dispatchEvent(new Event("resize"));
            }
        }
    </script>

    <script>
        // Below is a JavaScript hack to stop NavigateTo from scrolling to the top of the page.
        // See: https://github.com/dotnet/aspnetcore/issues/40190

        var skipScrollTo = false;
        const origScrollTo = window.scrollTo;
        window.scrollTo = (x, y) => {
            if (x === 0 && y === 0 && skipScrollTo) {
                skipScrollTo = false;
                return;
            }
            return origScrollTo.apply(this, [x, y]);
        };

        function willSkipScrollTo(newValue) {
            skipScrollTo = newValue;
        }
    </script>

    <Routes @rendermode="@InteractiveAuto" />
    <script src="_framework/blazor.web.js"></script>
</body>

</html>